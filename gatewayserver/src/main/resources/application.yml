server:
  port: 8072

logging:
  level:
    com:
      bank:
        gatewayserver: DEBUG

spring:
  application:
    name: "gatewayserver"

  profiles:
    active: default

  config:
    import: optional:configserver:http://localhost:8071

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

  sleuth:
    sampler:
      probability: 1

  zipkin:
    baseUrl: http://localhost:9411/
    sender:
      type: rabbit
    rabbitmq:
      queue: zipkin

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: "http://localhost:7080/realms/master/protocol/openid-connect/token"
            authorization-uri: "http://localhost:7080/realms/master/protocol/openid-connect/auth"
            userinfo-uri: "http://localhost:7080/realms/master/protocol/openid-connect/userinfo"
            user-name-attribute: "preferred_username"
        registration:
          bank-gateway:
            provider: "keycloak"
            client-id: "bank-gateway-ui"
            client-secret: "8zJYLoN93VqgSVkLE537kvxEpHZaD4ys"
            authorization-grant-type: "authorization_code"
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"


#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: http://localhost:7080/realms/master/protocol/openid-connect/certs

endpoints:
  shutdown:
    enabled: true

management:
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"

info:
  app:
    name: "Gateway Server Microservice"
    version: 1.0.0
    description: "Bank Gateway Server Microservice"


eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/